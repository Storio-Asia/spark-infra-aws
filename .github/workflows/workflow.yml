# This is a basic workflow to help you get started with Actions
name:
  Connect to an AWS role from a GitHub repository

# Controls when the action will run. Invokes the workflow on push events but only for the main branch
on:
  push:
    branches: [ main ]
 
env:
  
  AWS_REGION : "ap-southeast-5" #Change to reflect your Region
  STATE_BUCKET : "storio-asia-terraform-state"
  KEY: "state.tfstate"
  DYNAODB_LOCK_TABLE : "terraform-state-lock-dynamodb"
  environment: "dev"
  client: "storio"
# Permission can be added at job level or workflow level    
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
jobs:
  
  terraform_Plan:
    runs-on: ubuntu-latest
    name: Plan Stage
    strategy:
      max-parallel: 10
      matrix:
        dir: ['terraform']
    environment: prod
    env:
      ENVIRONMENT: "prod"
    defaults:
      run:
        working-directory: ./${{matrix.dir}}
    steps:

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::483898562597:role/github_role
          role-session-name: storio_github_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Git clone the repository
        uses: actions/checkout@v3

      
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity
      
      - name: setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{env.STATE_BUCKET}}" -backend-config="key=${{env.client}}/${{env.KEY}}" -backend-config="region=${{env.AWS_REGION}}" # -backend-config="workspace_key_prefix=dev" 
      
      - name: Terraform Plan
        id: plan
        run: | 
          export WORKSPACE=${{env.environment}}
          terraform workspace select $WORKSPACE || terraform workspace new $WORKSPACE
          terraform plan
      
  manual-approval:
    runs-on: ubuntu-latest
    name: manual approval
    needs: terraform_Plan
    if: success()

    permissions:
      issues: write
    
    steps:
      - name: Await manual approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: hassanbaber
          issue-title: "Manual approval required for terraform apply"
          issue-body: "Please approve or deny the deployment"
  
  terraform_apply:
    runs-on: ubuntu-latest
    name: terraform apply
    needs: manual-approval
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: setup Terraform
        uses: hashicorp/setup-terraform@v3
      
      - name: Terraform Init
        id: init
        run: terraform init -backend-config="bucket=${{env.STATE_BUCKET}}" -backend-config="key=${{env.client}}/${{env.KEY}}" -backend-config="region=${{env.AWS_REGION}}" # -backend-config="workspace_key_prefix=dev"

      - name: Terraform Apply
        id: apply
        run: | 
          export WORKSPACE=${{env.environment}}
          terraform workspace select $WORKSPACE || terraform workspace new $WORKSPACE
          terraform apply --auto-approve
      
      


      
